{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/data/constants.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","className","s","statList","FeedbackOptions","options","onLeaveFeedback","map","option","feedback","id","uuidv4","feedbackButton","type","data-feedback","onClick","FeedbackButton","propTypes","PropTypes","arrayOf","string","func","isRequired","FEEDBACK_OPTIONS","App","state","handlerFeedback","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2QAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,M,gBCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC2B3BC,EAzBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACGD,EAAQ,GACP,qBAAIE,UAAWC,IAAEC,SAAjB,UACE,wCAAWP,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,oDAAuBC,EAAvB,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0B,wCCEtCU,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OAfJ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUH,EAAsB,EAAtBA,gBAC5BI,EAAKC,cACX,OACE,wBAEEV,UAAWC,IAAEU,eACbC,KAAK,SACLC,gBAAeL,EACfM,QAAST,EALX,SAOGG,GANIC,GAYPM,CAAe,CAAEP,SAAUD,EAAQF,wBAIvCF,EAAgBa,UAAY,CAC1BZ,QAASa,IAAUC,QAAQD,IAAUE,QACrCd,gBAAiBY,IAAUG,KAAKC,YAGnBlB,QC7BFmB,EAAmB,CAAC,OAAQ,UAAW,OCyDrCC,E,4MAhDbC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,gBAAkB,YAAiB,IACzBjB,EADwB,EAAbkB,OACSC,QAApBnB,SACR,EAAKoB,UAAS,SAAAC,GAAS,sBAAQrB,EAAWqB,EAAUrB,GAAY,O,EAGlEsB,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjB7B,KADiB,EACXC,QADW,EACFC,K,EAIzBkC,gCAAkC,WAAO,IAC/BpC,EAAS,EAAK6B,MAAd7B,KACFG,EAAQ,EAAKgC,qBACnB,OAAOhC,EAAQkC,KAAKC,MAAOtC,EAAOG,EAAS,KAAO,G,uDAG1C,IAAD,EACwBoC,KAAKV,MAA5B7B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQoC,KAAKJ,qBACb/B,EAAqBmC,KAAKH,kCAChC,OACE,gCACE,cAAC,EAAD,CAASzC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAASkB,EACTjB,gBAAiB6B,KAAKT,oBAG1B,cAAC,EAAD,CAASnC,MAAM,aAAf,SACE,cAAC,EAAD,CACEK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAzCdoC,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,SAAW,+B,kBCA7BD,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.0f00bc6d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul className={s.statList}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback:{positivePercentage}%</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No Feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  const id = uuidv4();\r\n  return (\r\n    <button\r\n      key={id}\r\n      className={s.feedbackButton}\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option =>\r\n    FeedbackButton({ feedback: option, onLeaveFeedback }),\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import React, { Component } from 'react';\n\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\n\nimport { FEEDBACK_OPTIONS } from './components/data/constants';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handlerFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return total ? Math.round((good / total) * 100) : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={FEEDBACK_OPTIONS}\n            onLeaveFeedback={this.handlerFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ReactDOM.render(<App />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__31srv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__2MK8g\"};"],"sourceRoot":""}